{"ast":null,"code":"var _jsxFileName = \"/home/mohan-muthanna/Desktop/Umang/perctical/src/components/RecordList.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useRecoilState } from 'recoil';\n// import { recordsState } from '../recoil/atom';\n\n// const RecordList = ({ searchQuery, setEditRecordId }) => {\n//   const [records, setRecords] = useRecoilState(recordsState);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const recordsPerPage = 5;\n\n//   const filteredRecords = records.filter(record => \n//     record.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//     record.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//     record.id.toString().includes(searchQuery)\n//   );\n\n//   const indexOfLastRecord = currentPage * recordsPerPage;\n//   const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n//   const currentRecords = filteredRecords.slice(indexOfFirstRecord, indexOfLastRecord);\n//   const totalPages = Math.ceil(filteredRecords.length / recordsPerPage);\n\n//   const handleDelete = (id) => {\n//     setRecords(prevRecords => prevRecords.filter(record => record.id !== id));\n//   };\n\n//   const handleEdit = (id) => {\n//     setEditRecordId(id);\n//   };\n\n//   return (\n//     <div>\n//       <ul>\n//         {currentRecords.map(record => (\n//           <li key={record.id}>\n//             {record.name} - {record.email} \n//             <button onClick={() => handleEdit(record.id)}>Edit</button>\n//             <button onClick={() => handleDelete(record.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//       <div>\n//         {Array.from({ length: totalPages }, (_, index) => (\n//           <button key={index} onClick={() => setCurrentPage(index + 1)}>\n//             {index + 1}\n//           </button>\n//         ))}\n//       </div>\n//       <div>\n//         {currentPage > 1 && (\n//           <button onClick={() => setCurrentPage(currentPage - 1)}>Previous</button>\n//         )}\n//         {currentPage < totalPages && (\n//           <button onClick={() => setCurrentPage(currentPage + 1)}>Next</button>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecordList;\n\nimport React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { recordsState } from '../recoil/atom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport ReactPaginate from 'react-paginate';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordList = ({\n  searchQuery,\n  setEditRecordId\n}) => {\n  _s();\n  const [records, setRecords] = useRecoilState(recordsState);\n  const [currentPage, setCurrentPage] = useState(0);\n  const recordsPerPage = 5;\n  const filteredRecords = records.filter(record => record.name.toLowerCase().includes(searchQuery.toLowerCase()) || record.email.toLowerCase().includes(searchQuery.toLowerCase()) || record.id.toString().includes(searchQuery));\n  const pageCount = Math.ceil(filteredRecords.length / recordsPerPage);\n  const handlePageClick = selectedPage => {\n    setCurrentPage(selectedPage.selected);\n  };\n  const currentRecords = filteredRecords.slice(currentPage * recordsPerPage, (currentPage + 1) * recordsPerPage);\n  const handleDelete = id => {\n    setRecords(prevRecords => prevRecords.filter(record => record.id !== id));\n  };\n  const handleEdit = id => {\n    setEditRecordId(id);\n  };\n  const columns = [{\n    dataField: 'id',\n    text: 'ID',\n    sort: true\n  }, {\n    dataField: 'name',\n    text: 'Name',\n    sort: true\n  }, {\n    dataField: 'email',\n    text: 'Email',\n    sort: true\n  }, {\n    dataField: 'actions',\n    text: 'Actions',\n    formatter: (cell, row) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning btn-sm\",\n        onClick: () => handleEdit(row.id),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger btn-sm\",\n        onClick: () => handleDelete(row.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(BootstrapTable, {\n      keyField: \"id\",\n      data: currentRecords,\n      columns: columns,\n      striped: true,\n      hover: true,\n      condensed: true,\n      pagination: paginationFactory({\n        hideSizePerPage: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: 'Previous',\n        nextLabel: 'Next',\n        breakLabel: '...',\n        pageCount: pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 3,\n        onPageChange: handlePageClick,\n        containerClassName: 'pagination',\n        activeClassName: 'active',\n        previousClassName: 'page-item',\n        nextClassName: 'page-item',\n        pageClassName: 'page-item',\n        pageLinkClassName: 'page-link',\n        previousLinkClassName: 'page-link',\n        nextLinkClassName: 'page-link',\n        breakLinkClassName: 'page-link'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordList, \"Z9n1UYaIUDwV+6o7G1zu3lh1/A0=\", false, function () {\n  return [useRecoilState];\n});\n_c = RecordList;\nexport default RecordList;\nvar _c;\n$RefreshReg$(_c, \"RecordList\");","map":{"version":3,"names":["React","useState","useRecoilState","recordsState","BootstrapTable","paginationFactory","ReactPaginate","jsxDEV","_jsxDEV","RecordList","searchQuery","setEditRecordId","_s","records","setRecords","currentPage","setCurrentPage","recordsPerPage","filteredRecords","filter","record","name","toLowerCase","includes","email","id","toString","pageCount","Math","ceil","length","handlePageClick","selectedPage","selected","currentRecords","slice","handleDelete","prevRecords","handleEdit","columns","dataField","text","sort","formatter","cell","row","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","keyField","data","striped","hover","condensed","pagination","hideSizePerPage","previousLabel","nextLabel","breakLabel","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","activeClassName","previousClassName","nextClassName","pageClassName","pageLinkClassName","previousLinkClassName","nextLinkClassName","breakLinkClassName","_c","$RefreshReg$"],"sources":["/home/mohan-muthanna/Desktop/Umang/perctical/src/components/RecordList.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useRecoilState } from 'recoil';\n// import { recordsState } from '../recoil/atom';\n\n// const RecordList = ({ searchQuery, setEditRecordId }) => {\n//   const [records, setRecords] = useRecoilState(recordsState);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const recordsPerPage = 5;\n\n//   const filteredRecords = records.filter(record => \n//     record.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//     record.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//     record.id.toString().includes(searchQuery)\n//   );\n\n//   const indexOfLastRecord = currentPage * recordsPerPage;\n//   const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n//   const currentRecords = filteredRecords.slice(indexOfFirstRecord, indexOfLastRecord);\n//   const totalPages = Math.ceil(filteredRecords.length / recordsPerPage);\n\n//   const handleDelete = (id) => {\n//     setRecords(prevRecords => prevRecords.filter(record => record.id !== id));\n//   };\n\n//   const handleEdit = (id) => {\n//     setEditRecordId(id);\n//   };\n\n//   return (\n//     <div>\n//       <ul>\n//         {currentRecords.map(record => (\n//           <li key={record.id}>\n//             {record.name} - {record.email} \n//             <button onClick={() => handleEdit(record.id)}>Edit</button>\n//             <button onClick={() => handleDelete(record.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//       <div>\n//         {Array.from({ length: totalPages }, (_, index) => (\n//           <button key={index} onClick={() => setCurrentPage(index + 1)}>\n//             {index + 1}\n//           </button>\n//         ))}\n//       </div>\n//       <div>\n//         {currentPage > 1 && (\n//           <button onClick={() => setCurrentPage(currentPage - 1)}>Previous</button>\n//         )}\n//         {currentPage < totalPages && (\n//           <button onClick={() => setCurrentPage(currentPage + 1)}>Next</button>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecordList;\n\nimport React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { recordsState } from '../recoil/atom';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css';\nimport ReactPaginate from 'react-paginate';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst RecordList = ({ searchQuery, setEditRecordId }) => {\n  const [records, setRecords] = useRecoilState(recordsState);\n  const [currentPage, setCurrentPage] = useState(0);\n  const recordsPerPage = 5;\n\n  const filteredRecords = records.filter(record => \n    record.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    record.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    record.id.toString().includes(searchQuery)\n  );\n\n  const pageCount = Math.ceil(filteredRecords.length / recordsPerPage);\n  const handlePageClick = (selectedPage) => {\n    setCurrentPage(selectedPage.selected);\n  };\n\n  const currentRecords = filteredRecords.slice(\n    currentPage * recordsPerPage,\n    (currentPage + 1) * recordsPerPage\n  );\n\n  const handleDelete = (id) => {\n    setRecords(prevRecords => prevRecords.filter(record => record.id !== id));\n  };\n\n  const handleEdit = (id) => {\n    setEditRecordId(id);\n  };\n\n  const columns = [\n    { dataField: 'id', text: 'ID', sort: true },\n    { dataField: 'name', text: 'Name', sort: true },\n    { dataField: 'email', text: 'Email', sort: true },\n    {\n      dataField: 'actions',\n      text: 'Actions',\n      formatter: (cell, row) => (\n        <div>\n          <button className=\"btn btn-warning btn-sm\" onClick={() => handleEdit(row.id)}>Edit</button>\n          <button className=\"btn btn-danger btn-sm\" onClick={() => handleDelete(row.id)}>Delete</button>\n        </div>\n      ),\n    },\n  ];\n\n  return (\n    <div className=\"container\">\n      <BootstrapTable\n        keyField=\"id\"\n        data={currentRecords}\n        columns={columns}\n        striped\n        hover\n        condensed\n        pagination={paginationFactory({ hideSizePerPage: true })}\n      />\n      <div className=\"d-flex justify-content-center\">\n        <ReactPaginate\n          previousLabel={'Previous'}\n          nextLabel={'Next'}\n          breakLabel={'...'}\n          pageCount={pageCount}\n          marginPagesDisplayed={2}\n          pageRangeDisplayed={3}\n          onPageChange={handlePageClick}\n          containerClassName={'pagination'}\n          activeClassName={'active'}\n          previousClassName={'page-item'}\n          nextClassName={'page-item'}\n          pageClassName={'page-item'}\n          pageLinkClassName={'page-link'}\n          previousLinkClassName={'page-link'}\n          nextLinkClassName={'page-link'}\n          breakLinkClassName={'page-link'}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default RecordList;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}