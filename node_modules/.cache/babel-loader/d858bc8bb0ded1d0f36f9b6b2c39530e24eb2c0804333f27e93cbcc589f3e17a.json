{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { useRecoilState } from 'recoil';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './RecordForm.css'; \n// import { recordsState } from '../../recoil/atom';\n\n// const RecordForm = ({ editRecordId, setEditRecordId }) => {\n//   const [records, setRecords] = useRecoilState(recordsState);\n//   const [email, setEmail] = useState('');\n//   const [name, setName] = useState('');\n\n//   const handleFileUpload = (event) => {\n//     const file = event.target.files[0];\n//     const reader = new FileReader();\n\n//     reader.onload = (e) => {\n//       const jsonData = JSON.parse(e.target.result);\n//       const existingEmails = new Set(records.map(record => record.email));\n//       const mergedRecords = [...records];\n\n//       jsonData.forEach(record => {\n//         if (!existingEmails.has(record.email)) {\n//           mergedRecords.push(record);\n//           existingEmails.add(record.email);\n//         }\n//       });\n\n//       setRecords(mergedRecords);\n//     };\n\n//     if (file) {\n//       reader.readAsText(file);\n//     }\n//   };\n\n//   const handleUpdateRecord = () => {\n//     const emailExists = records.some(record => record.email === email && record.id !== editRecordId);\n//     if (emailExists) {\n//       alert(\"Email must be unique!\");\n//       return;\n//     }\n//     setRecords(records.map(record => record.id === editRecordId ? { ...record, email, name } : record));\n//     resetForm(); \n//   };\n\n//   const resetForm = () => {\n//     setEditRecordId(null);\n//     setEmail('');\n//     setName('');\n//   };\n\n//   useEffect(() => {\n//     if (editRecordId) {\n//       const recordToEdit = records.find(record => record.id === editRecordId);\n//       if (recordToEdit) {\n//         setName(recordToEdit.name);\n//         setEmail(recordToEdit.email);\n//       }\n//     }\n//   }, [editRecordId, records]);\n\n//   return (\n//     <div className=\"mt-4\">\n//       <div className=\"card shadow-sm\">\n//         <div className=\"card-header bg-primary text-white\">\n//           <h5 className=\"mb-0\">Update Record</h5>\n//         </div>\n//         <div className=\"card-body\">\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Upload JSON File</label>\n//             <input \n//               type=\"file\" \n//               accept=\".json\" \n//               onChange={handleFileUpload} \n//               className=\"form-control\" \n//             />\n//           </div>\n\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Name</label>\n//             <input \n//               type=\"text\" \n//               placeholder=\"Enter Name\" \n//               value={name} \n//               onChange={(e) => setName(e.target.value)} \n//               className=\"form-control\" \n//             />\n//           </div>\n\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Email</label>\n//             <input \n//               type=\"email\" \n//               placeholder=\"Enter Email\" \n//               value={email} \n//               onChange={(e) => setEmail(e.target.value)} \n//               className=\"form-control\" \n//             />\n//           </div>\n\n//           <div className=\"d-flex justify-content-end\">\n//             <button \n//               className=\"btn btn-primary\" \n//               onClick={handleUpdateRecord}>\n//               Update Record\n//             </button>\n//             <button \n//               className=\"btn btn-secondary ms-2\" \n//               onClick={resetForm}>\n//               Reset\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecordForm;","map":{"version":3,"names":[],"sources":["/home/mohan-muthanna/Desktop/Umang/perctical/src/components/RecordForm/RecordForm.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\n// import { useRecoilState } from 'recoil';\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import './RecordForm.css'; \n// import { recordsState } from '../../recoil/atom';\n\n// const RecordForm = ({ editRecordId, setEditRecordId }) => {\n//   const [records, setRecords] = useRecoilState(recordsState);\n//   const [email, setEmail] = useState('');\n//   const [name, setName] = useState('');\n\n//   const handleFileUpload = (event) => {\n//     const file = event.target.files[0];\n//     const reader = new FileReader();\n\n//     reader.onload = (e) => {\n//       const jsonData = JSON.parse(e.target.result);\n//       const existingEmails = new Set(records.map(record => record.email));\n//       const mergedRecords = [...records];\n\n//       jsonData.forEach(record => {\n//         if (!existingEmails.has(record.email)) {\n//           mergedRecords.push(record);\n//           existingEmails.add(record.email);\n//         }\n//       });\n\n//       setRecords(mergedRecords);\n//     };\n\n//     if (file) {\n//       reader.readAsText(file);\n//     }\n//   };\n\n//   const handleUpdateRecord = () => {\n//     const emailExists = records.some(record => record.email === email && record.id !== editRecordId);\n//     if (emailExists) {\n//       alert(\"Email must be unique!\");\n//       return;\n//     }\n//     setRecords(records.map(record => record.id === editRecordId ? { ...record, email, name } : record));\n//     resetForm(); \n//   };\n\n//   const resetForm = () => {\n//     setEditRecordId(null);\n//     setEmail('');\n//     setName('');\n//   };\n\n//   useEffect(() => {\n//     if (editRecordId) {\n//       const recordToEdit = records.find(record => record.id === editRecordId);\n//       if (recordToEdit) {\n//         setName(recordToEdit.name);\n//         setEmail(recordToEdit.email);\n//       }\n//     }\n//   }, [editRecordId, records]);\n\n//   return (\n//     <div className=\"mt-4\">\n//       <div className=\"card shadow-sm\">\n//         <div className=\"card-header bg-primary text-white\">\n//           <h5 className=\"mb-0\">Update Record</h5>\n//         </div>\n//         <div className=\"card-body\">\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Upload JSON File</label>\n//             <input \n//               type=\"file\" \n//               accept=\".json\" \n//               onChange={handleFileUpload} \n//               className=\"form-control\" \n//             />\n//           </div>\n\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Name</label>\n//             <input \n//               type=\"text\" \n//               placeholder=\"Enter Name\" \n//               value={name} \n//               onChange={(e) => setName(e.target.value)} \n//               className=\"form-control\" \n//             />\n//           </div>\n\n//           <div className=\"mb-3\">\n//             <label className=\"form-label\">Email</label>\n//             <input \n//               type=\"email\" \n//               placeholder=\"Enter Email\" \n//               value={email} \n//               onChange={(e) => setEmail(e.target.value)} \n//               className=\"form-control\" \n//             />\n//           </div>\n\n//           <div className=\"d-flex justify-content-end\">\n//             <button \n//               className=\"btn btn-primary\" \n//               onClick={handleUpdateRecord}>\n//               Update Record\n//             </button>\n//             <button \n//               className=\"btn btn-secondary ms-2\" \n//               onClick={resetForm}>\n//               Reset\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecordForm;\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}