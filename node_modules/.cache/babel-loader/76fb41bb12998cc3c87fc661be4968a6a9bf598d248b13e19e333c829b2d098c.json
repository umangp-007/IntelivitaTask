{"ast":null,"code":"// import React, { useState } from 'react';\n// import { useRecoilState } from 'recoil';\n// import { recordsState } from '../recoil/atom';\n\n// const RecordList = ({ searchQuery, setEditRecordId }) => {\n//   const [records, setRecords] = useRecoilState(recordsState);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const recordsPerPage = 5;\n\n//   const filteredRecords = records.filter(record => \n//     record.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//     record.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//     record.id.toString().includes(searchQuery)\n//   );\n\n//   const indexOfLastRecord = currentPage * recordsPerPage;\n//   const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n//   const currentRecords = filteredRecords.slice(indexOfFirstRecord, indexOfLastRecord);\n//   const totalPages = Math.ceil(filteredRecords.length / recordsPerPage);\n\n//   const handleDelete = (id) => {\n//     setRecords(prevRecords => prevRecords.filter(record => record.id !== id));\n//   };\n\n//   const handleEdit = (id) => {\n//     setEditRecordId(id);\n//   };\n\n//   return (\n//     <div>\n//       <ul>\n//         {currentRecords.map(record => (\n//           <li key={record.id}>\n//             {record.name} - {record.email} \n//             <button onClick={() => handleEdit(record.id)}>Edit</button>\n//             <button onClick={() => handleDelete(record.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//       <div>\n//         {Array.from({ length: totalPages }, (_, index) => (\n//           <button key={index} onClick={() => setCurrentPage(index + 1)}>\n//             {index + 1}\n//           </button>\n//         ))}\n//       </div>\n//       <div>\n//         {currentPage > 1 && (\n//           <button onClick={() => setCurrentPage(currentPage - 1)}>Previous</button>\n//         )}\n//         {currentPage < totalPages && (\n//           <button onClick={() => setCurrentPage(currentPage + 1)}>Next</button>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecordList;\n\nimport 'bootstrap/dist/css/bootstrap.min.css';","map":{"version":3,"names":[],"sources":["/home/mohan-muthanna/Desktop/Umang/perctical/src/components/RecordList.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { useRecoilState } from 'recoil';\n// import { recordsState } from '../recoil/atom';\n\n// const RecordList = ({ searchQuery, setEditRecordId }) => {\n//   const [records, setRecords] = useRecoilState(recordsState);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const recordsPerPage = 5;\n\n//   const filteredRecords = records.filter(record => \n//     record.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//     record.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n//     record.id.toString().includes(searchQuery)\n//   );\n\n//   const indexOfLastRecord = currentPage * recordsPerPage;\n//   const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n//   const currentRecords = filteredRecords.slice(indexOfFirstRecord, indexOfLastRecord);\n//   const totalPages = Math.ceil(filteredRecords.length / recordsPerPage);\n\n//   const handleDelete = (id) => {\n//     setRecords(prevRecords => prevRecords.filter(record => record.id !== id));\n//   };\n\n//   const handleEdit = (id) => {\n//     setEditRecordId(id);\n//   };\n\n//   return (\n//     <div>\n//       <ul>\n//         {currentRecords.map(record => (\n//           <li key={record.id}>\n//             {record.name} - {record.email} \n//             <button onClick={() => handleEdit(record.id)}>Edit</button>\n//             <button onClick={() => handleDelete(record.id)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//       <div>\n//         {Array.from({ length: totalPages }, (_, index) => (\n//           <button key={index} onClick={() => setCurrentPage(index + 1)}>\n//             {index + 1}\n//           </button>\n//         ))}\n//       </div>\n//       <div>\n//         {currentPage > 1 && (\n//           <button onClick={() => setCurrentPage(currentPage - 1)}>Previous</button>\n//         )}\n//         {currentPage < totalPages && (\n//           <button onClick={() => setCurrentPage(currentPage + 1)}>Next</button>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default RecordList;\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAO,sCAAsC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}