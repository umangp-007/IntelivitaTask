{"ast":null,"code":"var _jsxFileName = \"/home/mohan-muthanna/Desktop/Umang/perctical/src/components/RecordList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { recordsState } from '../recoil/atom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecordList = ({\n  searchQuery,\n  setEditRecordId\n}) => {\n  _s();\n  const [records, setRecords] = useRecoilState(recordsState);\n  const [currentPage, setCurrentPage] = useState(1);\n  const recordsPerPage = 5;\n  const filteredRecords = records.filter(record => record.name.toLowerCase().includes(searchQuery.toLowerCase()) || record.email.toLowerCase().includes(searchQuery.toLowerCase()) || record.id.toString().includes(searchQuery));\n\n  // Pagination logic\n  const indexOfLastRecord = currentPage * recordsPerPage;\n  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n  const currentRecords = filteredRecords.slice(indexOfFirstRecord, indexOfLastRecord);\n  const totalPages = Math.ceil(filteredRecords.length / recordsPerPage);\n  const handleDelete = id => {\n    // Use setRecords to filter out the deleted record\n    setRecords(prevRecords => prevRecords.filter(record => record.id !== id));\n  };\n  const handleEdit = id => {\n    // Set the ID of the record to be edited\n    setEditRecordId(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: currentRecords.map(record => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [record.name, \" - \", record.email, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleEdit(record.id),\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(record.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, record.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: Array.from({\n        length: totalPages\n      }, (_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(index + 1),\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [currentPage > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage - 1),\n        children: \"Previous\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), currentPage < totalPages && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setCurrentPage(currentPage + 1),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(RecordList, \"PUqBWIiDXcxQTX6XJJKpt/ka+kg=\", false, function () {\n  return [useRecoilState];\n});\n_c = RecordList;\nexport default RecordList;\nvar _c;\n$RefreshReg$(_c, \"RecordList\");","map":{"version":3,"names":["React","useState","useRecoilState","recordsState","jsxDEV","_jsxDEV","RecordList","searchQuery","setEditRecordId","_s","records","setRecords","currentPage","setCurrentPage","recordsPerPage","filteredRecords","filter","record","name","toLowerCase","includes","email","id","toString","indexOfLastRecord","indexOfFirstRecord","currentRecords","slice","totalPages","Math","ceil","length","handleDelete","prevRecords","handleEdit","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","index","_c","$RefreshReg$"],"sources":["/home/mohan-muthanna/Desktop/Umang/perctical/src/components/RecordList.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useRecoilState } from 'recoil';\nimport { recordsState } from '../recoil/atom';\n\nconst RecordList = ({ searchQuery, setEditRecordId }) => {\n  const [records, setRecords] = useRecoilState(recordsState);\n  const [currentPage, setCurrentPage] = useState(1);\n  const recordsPerPage = 5;\n\n  const filteredRecords = records.filter(record => \n    record.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    record.email.toLowerCase().includes(searchQuery.toLowerCase()) ||\n    record.id.toString().includes(searchQuery)\n  );\n\n  // Pagination logic\n  const indexOfLastRecord = currentPage * recordsPerPage;\n  const indexOfFirstRecord = indexOfLastRecord - recordsPerPage;\n  const currentRecords = filteredRecords.slice(indexOfFirstRecord, indexOfLastRecord);\n  const totalPages = Math.ceil(filteredRecords.length / recordsPerPage);\n\n  const handleDelete = (id) => {\n    // Use setRecords to filter out the deleted record\n    setRecords(prevRecords => prevRecords.filter(record => record.id !== id));\n  };\n\n  const handleEdit = (id) => {\n    // Set the ID of the record to be edited\n    setEditRecordId(id);\n  };\n\n  return (\n    <div>\n      <ul>\n        {currentRecords.map(record => (\n          <li key={record.id}>\n            {record.name} - {record.email} \n            <button onClick={() => handleEdit(record.id)}>Edit</button>\n            <button onClick={() => handleDelete(record.id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n      <div>\n        {Array.from({ length: totalPages }, (_, index) => (\n          <button key={index} onClick={() => setCurrentPage(index + 1)}>\n            {index + 1}\n          </button>\n        ))}\n      </div>\n      <div>\n        {currentPage > 1 && (\n          <button onClick={() => setCurrentPage(currentPage - 1)}>Previous</button>\n        )}\n        {currentPage < totalPages && (\n          <button onClick={() => setCurrentPage(currentPage + 1)}>Next</button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default RecordList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}